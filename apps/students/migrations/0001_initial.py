# Generated by Django 4.2.21 on 2025-07-04 22:44

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('corecode', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=10)),
                ('registration_number', models.CharField(max_length=200, unique=True, validators=[django.core.validators.RegexValidator(message='Registration number must be in the format SXXXX/XXXX/YYYY (e.g., S0123/0032/2025).', regex='^S[0-9]{4}/[0-9]{4}/[0-9]{4}$')])),
                ('firstname', models.CharField(max_length=200)),
                ('middle_name', models.CharField(blank=True, max_length=200)),
                ('surname', models.CharField(max_length=200)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], default='male', max_length=10)),
                ('date_of_birth', models.DateField(default=django.utils.timezone.now)),
                ('date_of_admission', models.DateField(default=django.utils.timezone.now)),
                ('category', models.CharField(choices=[('boarding', 'Boarding'), ('day_walker', 'Day Scholar (Walker)'), ('day_bus', 'Day Scholar (Bus)')], default='boarding', max_length=20)),
                ('guardian1_mobile_number', models.CharField(blank=True, default='+255', max_length=13, validators=[django.core.validators.RegexValidator(message="Entered mobile number isn't in a right format!", regex='^\\+255[0-9]{9}$')])),
                ('guardian2_mobile_number', models.CharField(blank=True, default='+255', max_length=13, validators=[django.core.validators.RegexValidator(message="Entered mobile number isn't in a right format!", regex='^\\+255[0-9]{9}$')])),
                ('has_nhif', models.BooleanField(default=False)),
                ('nhif_source', models.CharField(blank=True, choices=[('parent_processed', 'Parent-Processed'), ('school_processed', 'School-Processed')], max_length=20, null=True)),
                ('nhif_number', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.TextField(blank=True)),
                ('others', models.TextField(blank=True)),
                ('passport', models.ImageField(blank=True, upload_to='students/passports/')),
                ('parent_student_id', models.IntegerField(blank=True, null=True)),
                ('completed', models.BooleanField(default=False)),
                ('alumni_session', models.ForeignKey(blank=True, help_text='Academic session when the student became an alumnus', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alumni', to='corecode.academicsession')),
                ('current_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='corecode.studentclass')),
            ],
            options={
                'ordering': ['firstname', 'middle_name', 'surname'],
            },
        ),
        migrations.CreateModel(
            name='StudentBulkUpload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_uploaded', models.DateTimeField(auto_now=True)),
                ('csv_file', models.FileField(upload_to='students/bulkupload/')),
            ],
        ),
        migrations.CreateModel(
            name='StudentTermAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_date', models.DateField(default=django.utils.timezone.now)),
                ('academic_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='corecode.academicsession')),
                ('academic_term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='corecode.academicterm')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.student')),
            ],
            options={
                'ordering': ['student__firstname', 'academic_session__name', 'academic_term__name'],
                'unique_together': {('student', 'academic_term', 'academic_session')},
            },
        ),
    ]

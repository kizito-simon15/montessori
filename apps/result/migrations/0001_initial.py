# Generated by Django 4.2.21 on 2025-07-04 22:44

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('students', '0001_initial'),
        ('corecode', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='StudentInfos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cooperation_with_peers', models.CharField(choices=[('A', 'A (Excellent)'), ('B', 'B (Very Good)'), ('C', 'C (Good)'), ('D', 'D (Satisfactory)'), ('F', 'F (Needs Improvement)')], default='A', max_length=1)),
                ('honesty', models.CharField(choices=[('A', 'A (Excellent)'), ('B', 'B (Very Good)'), ('C', 'C (Good)'), ('D', 'D (Satisfactory)'), ('F', 'F (Needs Improvement)')], default='A', max_length=1)),
                ('hygiene', models.CharField(choices=[('A', 'A (Excellent)'), ('B', 'B (Very Good)'), ('C', 'C (Good)'), ('D', 'D (Satisfactory)'), ('F', 'F (Needs Improvement)')], default='A', max_length=1)),
                ('willingness_to_work', models.CharField(choices=[('A', 'A (Excellent)'), ('B', 'B (Very Good)'), ('C', 'C (Good)'), ('D', 'D (Satisfactory)'), ('F', 'F (Needs Improvement)')], default='A', max_length=1)),
                ('respect', models.CharField(choices=[('A', 'A (Excellent)'), ('B', 'B (Very Good)'), ('C', 'C (Good)'), ('D', 'D (Satisfactory)'), ('F', 'F (Needs Improvement)')], default='A', max_length=1)),
                ('collaboration_in_work', models.CharField(choices=[('A', 'A (Excellent)'), ('B', 'B (Very Good)'), ('C', 'C (Good)'), ('D', 'D (Satisfactory)'), ('F', 'F (Needs Improvement)')], default='A', max_length=1)),
                ('love_for_work', models.CharField(choices=[('A', 'A (Excellent)'), ('B', 'B (Very Good)'), ('C', 'C (Good)'), ('D', 'D (Satisfactory)'), ('F', 'F (Needs Improvement)')], default='A', max_length=1)),
                ('behavior_improvement', models.CharField(choices=[('A', 'A (Excellent)'), ('B', 'B (Very Good)'), ('C', 'C (Good)'), ('D', 'D (Satisfactory)'), ('F', 'F (Needs Improvement)')], default='A', max_length=1)),
                ('effort', models.CharField(choices=[('A', 'A (Excellent)'), ('B', 'B (Very Good)'), ('C', 'C (Good)'), ('D', 'D (Satisfactory)'), ('F', 'F (Needs Improvement)')], default='A', max_length=1)),
                ('date_of_closing', models.DateField(default=django.utils.timezone.now)),
                ('date_of_opening', models.DateField(default=django.utils.timezone.now)),
                ('head_comments', models.TextField(blank=True)),
                ('exam', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='corecode.examtype')),
                ('session', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='corecode.academicsession')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='students.student')),
                ('term', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='corecode.academicterm')),
            ],
            options={
                'permissions': [('view_single_student_results', 'Can view single student results')],
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_score', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('exam_score', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('average', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('total', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('overall_average', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('overall_status', models.CharField(default='FAIL', max_length=10)),
                ('status', models.CharField(default='FAIL', max_length=10)),
                ('gpa', models.DecimalField(decimal_places=3, default=0.0, max_digits=5)),
                ('subject_grade', models.CharField(default='F', max_length=1)),
                ('current_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='corecode.studentclass')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='corecode.examtype')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='corecode.academicsession')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='students.student')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='corecode.subject')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='corecode.academicterm')),
            ],
            options={
                'ordering': ['subject'],
                'permissions': [('delete_page', 'Can delete page results')],
            },
        ),
    ]

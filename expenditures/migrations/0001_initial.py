# Generated by Django 4.2.21 on 2025-07-07 15:55

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import expenditures.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('finance', '0007_alter_deduction_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BudgetLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'verbose_name': 'Budget line',
                'verbose_name_plural': 'Budget lines',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='KitchenProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=80, unique=True)),
                ('unit', models.CharField(choices=[('kg', 'Kilogram'), ('g', 'Gram'), ('l', 'Litre'), ('pcs', 'Pieces'), ('bag', 'Bag')], default='kg', max_length=10)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProcessedProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=80, unique=True)),
                ('unit', models.CharField(default='kg', max_length=20)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SeasonalProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=80, unique=True)),
                ('unit', models.CharField(default='kg', max_length=20)),
                ('processable', models.BooleanField(default=True, help_text='Untick for items that will never be processed.')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SeasonalPurchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('bags_count', models.PositiveIntegerField()),
                ('bag_weight', models.DecimalField(blank=True, decimal_places=2, help_text='Weight per bag (kg, optional)', max_digits=10, null=True)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=14, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('price_per_unit', models.DecimalField(decimal_places=2, help_text='TZS / kg or TZS / bag', max_digits=14, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('invoice_file', models.FileField(blank=True, upload_to=expenditures.models._receipt_upload)),
                ('notes', models.TextField(blank=True)),
                ('budget', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='seasonal_purchases', to='finance.budget')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchases', to='expenditures.seasonalproduct')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ProcessingBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('input_quantity', models.DecimalField(decimal_places=2, max_digits=14, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('output_quantity', models.DecimalField(decimal_places=2, max_digits=14, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('processing_fee', models.DecimalField(decimal_places=2, default=0, max_digits=14, validators=[django.core.validators.MinValueValidator(0)])),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('processed_product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='batches', to='expenditures.processedproduct')),
                ('source_purchase', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='batches', to='expenditures.seasonalpurchase')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.AddField(
            model_name='processedproduct',
            name='source_product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='outputs', to='expenditures.seasonalproduct'),
        ),
        migrations.CreateModel(
            name='KitchenUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('quantity_used', models.DecimalField(decimal_places=2, max_digits=14, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='usages', to='expenditures.kitchenproduct')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='KitchenPurchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=14, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('price_per_unit', models.DecimalField(decimal_places=2, max_digits=14, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('budget', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='kitchen_purchases', to='finance.budget')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchases', to='expenditures.kitchenproduct')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Expenditure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('item_name', models.CharField(max_length=120)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=14, validators=[django.core.validators.MinValueValidator(1)])),
                ('quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=14, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('unit', models.CharField(blank=True, max_length=20, null=True)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('description', models.TextField(blank=True)),
                ('attachment', models.FileField(blank=True, upload_to='expenditure_docs/%Y/%m/')),
                ('budget', models.ForeignKey(help_text='Budget that funds this payment', on_delete=django.db.models.deletion.PROTECT, related_name='operating_expenditures', to='finance.budget')),
                ('budget_line', models.ForeignKey(help_text='Chart-of-accounts bucket (Fuel, Stationery â€¦)', on_delete=django.db.models.deletion.PROTECT, related_name='expenditures', to='expenditures.budgetline')),
                ('receipt', models.ForeignKey(blank=True, help_text='(Optional) School-fee receipt that funded this spending', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='expenditures', to='finance.receipt')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='DailyConsumption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('quantity_used', models.DecimalField(decimal_places=2, max_digits=14, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('remarks', models.TextField(blank=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='daily_consumptions', to='expenditures.processedproduct')),
                ('recorded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.AddIndex(
            model_name='seasonalpurchase',
            index=models.Index(fields=['product', 'date'], name='expenditure_product_fad6e2_idx'),
        ),
        migrations.AddIndex(
            model_name='processingbatch',
            index=models.Index(fields=['processed_product', 'date'], name='expenditure_process_a8a3b9_idx'),
        ),
        migrations.AddConstraint(
            model_name='processingbatch',
            constraint=models.CheckConstraint(check=models.Q(('output_quantity__lte', models.F('input_quantity'))), name='output_le_input'),
        ),
        migrations.AddIndex(
            model_name='kitchenusage',
            index=models.Index(fields=['product', 'date'], name='expenditure_product_b963bc_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='kitchenusage',
            unique_together={('product', 'date')},
        ),
        migrations.AddIndex(
            model_name='kitchenpurchase',
            index=models.Index(fields=['product', 'date'], name='expenditure_product_16f1a6_idx'),
        ),
        migrations.AddIndex(
            model_name='expenditure',
            index=models.Index(fields=['date'], name='expenditure_date_73f06b_idx'),
        ),
        migrations.AddIndex(
            model_name='expenditure',
            index=models.Index(fields=['budget_line'], name='expenditure_budget__512531_idx'),
        ),
        migrations.AddIndex(
            model_name='expenditure',
            index=models.Index(fields=['budget'], name='expenditure_budget__5da565_idx'),
        ),
        migrations.AddIndex(
            model_name='expenditure',
            index=models.Index(fields=['receipt'], name='expenditure_receipt_7680b1_idx'),
        ),
        migrations.AddIndex(
            model_name='dailyconsumption',
            index=models.Index(fields=['product', 'date'], name='expenditure_product_0ff4cb_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='dailyconsumption',
            unique_together={('product', 'date')},
        ),
    ]
